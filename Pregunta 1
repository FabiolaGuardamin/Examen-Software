from flask import Flask, jsonify, request, abort

app = Flask(_name_)
BD = []

class Cuenta:
    def _init_(self, Number: str, Name: str, Balance: int, Contacts: list):
        self.Number = Number
        self.Name = Name
        self.Balance = int(Balance)
        self.Contacts = Contacts
        self.History = []

    def GetHistory(self):
        history_list = []
        history_list.append(f"Balance of {self.Name}: {self.Balance}")
        history_list.append(f"Operations of {self.Name}")
        for operation in self.History:
            if operation['type'] == 'payment_received':
                history_list.append(f"Payment received from {operation['origin']} of {operation['amount']}")
            elif operation['type'] == 'payment_made':
                history_list.append(f"Payment made of {operation['amount']} to {operation['destination']}")
        return history_list

    def Pay(self, DestinationNumber: str, Amount: int):
        Amount = int(Amount)
        if self.Balance >= Amount:
            self.Balance -= Amount
            self.History.append({
                'type': 'payment_made',
                'amount': Amount,
                'destination': DestinationNumber
            })
            for account in BD:
                if account.Number == DestinationNumber:
                    account.Balance += Amount
                    account.History.append({
                        'type': 'payment_received',
                        'amount': Amount,
                        'origin': self.Number
                    })
            return True
        else:
            return False
        

@app.route('/wallet/contacts', methods=['GET'])
def GetContacts():
    my_number = request.args.get('my_number')
    contacts_dict = {}
    for account in BD:
        if account.Number == my_number:
            contacts = account.Contacts
            for contact in contacts:
                for acc in BD:
                    if acc.Number == contact:
                        contacts_dict[contact] = acc.Name
                        print(f"{contact}: {acc.Name}")
    return jsonify(contacts_dict)

@app.route('/wallet/pay', methods=['GET'])
def Pay():
    my_number = request.args.get('my_number')
    destination_number = request.args.get('destination_number')
    amount = request.args.get('amount')
    for account in BD:
        if account.Number == my_number:
            if account.Pay(destination_number, amount):
                return jsonify({"message": "Payment successful"})
            else:
                abort(400, description="Insufficient funds")
    abort(404, description="Account not found")

@app.route('/wallet/history', methods=['GET'])
def GetHistory():
    my_number = request.args.get('my_number')
    for account in BD:
        if account.Number == my_number:
            return jsonify(account.GetHistory())
    abort(404, description="Account not found")

if _name_ == '_main_':
    app.run(debug=True)

